#!/bin/bash

if [[ $EUID -ne 0 ]]; then
  echo "เกิดข้อผิดพลาด: กรุณาเข้าสู่ระบบด้วย root : sudo -i ก่อนลงสคริปต์" 2>&1
  exit 1
fi

NC='\033[0m'
MYIP=$(wget -qO- http://whatismyip.akamai.com/)

ln -fs /usr/share/zoneinfo/Asia/Bangkok /etc/localtime

apt update
apt -y install gpg curl gnupg2 wget unzip software-properties-common apt-transport-https lsb-release ca-certificates
apt -y install neofetch

echo "deb [ arch=amd64,arm64 signed-by=/usr/share/keyrings/mongodb-server-7.0.gpg ] https://repo.mongodb.org/apt/ubuntu focal/mongodb-org/7.0 multiverse" > /etc/apt/sources.list.d/mongodb-org-7.0.list
echo "deb https://repo.pritunl.com/stable/apt focal main" > /etc/apt/sources.list.d/pritunl.list
sudo apt --assume-yes install gnupg
curl -fsSL https://pgp.mongodb.com/server-7.0.asc | \sudo gpg -o /usr/share/keyrings/mongodb-server-7.0.gpg \--dearmor
apt-key adv --keyserver hkp://keyserver.ubuntu.com --recv 160D26BB1785BA38
apt-key adv --keyserver hkp://keyserver.ubuntu.com --recv-keys 7AE645C0CF8E292A
apt-key adv --armor --export 7AE645C0CF8E292A | sudo tee /etc/apt/trusted.gpg.d/pritunl.asc
apt update
apt --assume-yes install pritunl mongodb-server
systemctl start pritunl mongodb
systemctl enable pritunl mongodb

clear

cd

apt update
apt -y install squid

cp /etc/squid/squid.conf /etc/squid/squid.conf.orig
echo "acl localnet src 0.0.0.1-0.255.255.255  # RFC 1122 "this" network (LAN)
acl localnet src 10.0.0.0/8             # RFC 1918 local private network (LAN)
acl localnet src 100.64.0.0/10          # RFC 6598 shared address space (CGN)
acl localnet src 169.254.0.0/16         # RFC 3927 link-local (directly plugged>
acl localnet src 172.16.0.0/12          # RFC 1918 local private network (LAN)
acl localnet src 192.168.0.0/16         # RFC 1918 local private network (LAN)
acl localnet src fc00::/7               # RFC 4193 local private network range
acl localnet src fe80::/10              # RFC 4291 link-local (directly plugged>

acl SSL_ports port 443
acl Safe_ports port 80          # http
acl Safe_ports port 21          # ftp
acl Safe_ports port 443         # https
acl Safe_ports port 70          # gopher
acl Safe_ports port 210         # wais
acl Safe_ports port 1025-65535  # unregistered ports
acl Safe_ports port 280         # http-mgmt
acl Safe_ports port 488         # gss-http
acl Safe_ports port 591         # filemaker
acl Safe_ports port 777         # multiling http
acl CONNECT method CONNECT

acl ip_server dst $MYIP-$MYIP/255.255.255.255

http_access allow ip_server
http_access allow localhost manager
http_access deny manager
http_access allow localnet
http_access allow localhost
http_access deny all

http_port 8080

cache_store_log none
cache_log /dev/null
logfile_rotate 0

via off
forwarded_for off
dns_v4_first on
refresh_pattern ^ftp:           1440    20%     10080
refresh_pattern ^gopher:        1440    0%      1440
refresh_pattern -i (/cgi-bin/|\?) 0     0%      0
refresh_pattern \/(Packages|Sources)(|\.bz2|\.gz|\.xz)$ 0 0% 0 refresh-ims
refresh_pattern \/Release(|\.gpg)$ 0 0% 0 refresh-ims
refresh_pattern \/InRelease$ 0 0% 0 refresh-ims
refresh_pattern \/(Translation-.*)(|\.bz2|\.gz|\.xz)$ 0 0% 0 refresh-ims
refresh_pattern .               0       20%     4320
visible_hostname Phanudet" > /etc/squid/squid.conf

/etc/init.d/squid start
/etc/init.d/squid restart

clear
cat > /etc/ssh/sshd_config <<-END
# By Alone
# phanudet
# This sshd was compiled with PATH=/usr/bin:/bin:/usr/sbin:/sbin
# The strategy used for options in the default sshd_config shipped with # OpenSSH is to specify options with their default value where
# possible, but leave them commented.  Uncommented options override the # default value.

Include /etc/ssh/sshd_config.d/*.conf

#Port 22
#AddressFamily any
#ListenAddress 0.0.0.0
#ListenAddress ::                                                       
#HostKey /etc/ssh/ssh_host_rsa_key
#HostKey /etc/ssh/ssh_host_ecdsa_key
#HostKey /etc/ssh/ssh_host_ed25519_key                                  
# Ciphers and keying
#RekeyLimit default none

# Logging
#SyslogFacility AUTH
#LogLevel INFO

# Authentication:

#LoginGraceTime 2m
PermitRootLogin yes
#StrictModes yes
#MaxAuthTries 6
#MaxSessions 10

#PubkeyAuthentication yes

# Expect .ssh/authorized_keys2 to be disregarded by default in future.
#AuthorizedKeysFile     .ssh/authorized_keys .ssh/authorized_keys2

#AuthorizedPrincipalsFile none

#AuthorizedKeysCommand none
#AuthorizedKeysCommandUser nobody

# For this to work you will also need host keys in /etc/ssh/ssh_known_h>#HostbasedAuthentication no
# Change to yes if you don't trust ~/.ssh/known_hosts for
# HostbasedAuthentication                                               #IgnoreUserKnownHosts no
# Don't read the user's ~/.rhosts and ~/.shosts files
#IgnoreRhosts yes

# To disable tunneled clear text passwords, change to no here!
PasswordAuthentication yes
#PermitEmptyPasswords no

# Change to yes to enable challenge-response passwords (beware issues w># some PAM modules and threads)
ChallengeResponseAuthentication no
# Kerberos options                                                      #KerberosAuthentication no
#KerberosOrLocalPasswd yes
#KerberosTicketCleanup yes                                              #KerberosGetAFSToken no

# GSSAPI options                                                        #GSSAPIAuthentication no
#GSSAPICleanupCredentials yes
#GSSAPIStrictAcceptorCheck yes
#GSSAPIKeyExchange no

# Set this to 'yes' to enable PAM authentication, account processing,
# and session processing. If this is enabled, PAM authentication will
# be allowed through the ChallengeResponseAuthentication and
# PasswordAuthentication.  Depending on your PAM configuration,
# PAM authentication via ChallengeResponseAuthentication may bypass
# the setting of "PermitRootLogin without-password".
# If you just want the PAM account and session checks to run without
# PAM authentication, then enable this but set PasswordAuthentication
# and ChallengeResponseAuthentication to 'no'.
UsePAM yes

#AllowAgentForwarding yes
#AllowTcpForwarding yes
#GatewayPorts no
X11Forwarding yes
#X11DisplayOffset 10
#X11UseLocalhost yes
#PermitTTY yes
PrintMotd no
#PrintLastLog yes
#TCPKeepAlive yes
#PermitUserEnvironment no
#Compression delayed
#ClientAliveInterval 0
#ClientAliveCountMax 3
#UseDNS no
#PidFile /var/run/sshd.pid
#MaxStartups 10:30:100
#PermitTunnel no
#ChrootDirectory none
#VersionAddendum none

# no default banner path
#Banner none

# Allow client to pass locale environment variables
AcceptEnv LANG LC_*

# override default of no subsystems
Subsystem sftp  /usr/lib/openssh/sftp-server

# Example of overriding settings on a per-user basis
#Match User anoncvs
#       X11Forwarding no
#       AllowTcpForwarding no
#       PermitTTY no
#       ForceCommand cvs server
END
/etc/init.d/ssh restart

cat > .bash_profile <<-END
clear
neofetch
function ScriptAlone(){
 echo -e ""
 echo -e "\033[1;32m ไอพีเซิร์ฟเวอร์ \033[1;31m: \033[1;37m$MYIP"
 echo -e ""
 sleep 0.5
 echo -e "\033[1;32m TrueMoney Wallet \033[1;37m0802686710"
 sleep 0.5
 echo -e "\033[1;37m Have a nice day.ツ...."
 sleep 0.5
 echo -e "\033[1;37m Script By Alone OpenMenu\033[1;31m: \033[1;32m 00${NC}"
 echo -e ""
 sleep 0.5
}
ScriptAlone
END

sudo apt update

sudo ufw allow ssh
sudo ufw allow 8080

clear
cd
cd /usr/bin
wget -O /usr/local/bin/00 "https://raw.githubusercontent.com/lemon-zaza/Alone/master/guzaa"
wget -O /usr/local/bin/01 "https://raw.githubusercontent.com/lemon-zaza/Alone/master/edit2"
wget -O /usr/local/bin/02 "https://raw.githubusercontent.com/lemon-zaza/Alone/master/ReU20"
wget -O /usr/local/bin/03 "https://raw.githubusercontent.com/lemon-zaza/Alone/master/ufw"
wget -O /usr/local/bin/04 "https://raw.githubusercontent.com/lemon-zaza/phanudet/master/login"
wget -O /usr/local/bin/05 "https://raw.githubusercontent.com/lemon-zaza/phanudet/master/ufwOff"
wget -O /usr/local/bin/06 "https://raw.githubusercontent.com/lemon-zaza/phanudet/master/spark01"
wget -O /usr/local/bin/SetReboot "https://raw.githubusercontent.com/lemon-zaza/phanudet/master/SetReboot"

chmod +x /usr/local/bin/00
chmod +x /usr/local/bin/01
chmod +x /usr/local/bin/02
chmod +x /usr/local/bin/03
chmod +x /usr/local/bin/04
chmod +x /usr/local/bin/05
chmod +x /usr/local/bin/06
chmod +x /usr/local/bin/SetReboot
cd

clear
echo -e ""
echo -e "\E[44;1;45m          ------ • ≧ ติดตั้งสำเร็จ..! ≦ • ------           \E[0m"
echo -e "\033[1;32m*\033[1;33m ความคุมเซิร์ฟเวอร์ด้วยระบบ \033[1;32mPRITUNL."
echo -e "\033[1;32m*\033[1;37mMENU \033[1;31m:\033[1;32m 00"
echo -e ""
echo -e "\033[1;32m• \033[1;37mTimezone \033[1;31m: \033[1;32m Thailand"
echo -e "\033[1;32m• \033[1;37mSquid Proxy \033[1;31m: \033[1;32m$MYIP"
echo -e "\033[1;32m• \033[1;37mProxy Port  \033[1;31m: \033[1;32m8080"
echo -e "\033[1;32m• \033[1;36mPritunl Websites https://$MYIP${NC}"
echo -e ""
pritunl setup-key
echo -e ""
echo -e "\033[1;32mCopy key Go to website"
echo -e ""
rm -rf /root/.bash_history && history -c && echo '' > /var/log/syslog
echo ""
sleep 0.5
echo -e "\033[1;37m ล้างบันทึกทั้งหมดจากการติดตั้ง \033[1;32m Ok..."
echo ""
sleep 0.5
echo -e "\033[1;37m เซิร์ฟเวอร์จะรีบูตภายใน \033[1;32m 5 วินาที${NC}"
echo ""
sleep 5
rm -f setup*
reboot
exit 1
